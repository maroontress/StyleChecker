name: .NET 9 CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          9.0.x
    - name: Install bomsweeper
      run: dotnet tool install -g BomSweeper.GlobalTool
    - name: Check for BOMs
      run: bomsweeper '**/*.cs' '**/*.csproj' '**/*.sln'
    - name: Build
      run: dotnet build --configuration Release
    - name: Install reportgenerator
      run: dotnet tool install -g dotnet-reportgenerator-globaltool
    - name: Test
      run: |
        dotnet test --configuration Release \
          --no-build \
          --logger "console;verbosity=detailed" \
          --collect:"XPlat Code Coverage" \
          --settings coverlet.runsettings.xml \
          --results-directory MsTestResults
        reportgenerator -reports:MsTestResults/*/coverage.cobertura.xml \
          -targetdir:Coverlet-html
    - name: Archive artifacts (code coverage)
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: Coverlet-html
    - name: Publish local NuGet packages
      run: |
        dotnet publish StyleChecker/StyleChecker/StyleChecker.csproj \
          --artifacts-path nuget-source \
          --configuration Release
        # The nupkg file will be created in ./nuget-source/package/release
    - name: install xsltproc
      run: |
        sudo apt-get update
        sudo apt-get install xsltproc
    - name: Rewrite package names in project files
      run: |
        file_list=$(find . -name '*.csproj')
        for file in $file_list; do
          xsltproc transform.xslt $file > $file.new
          mv $file.new $file
        done
    - name: Self check
      run: |
        file_list=$(find . -name '*.csproj')
        for file in $file_list; do
          dotnet add $file package StyleChecker \
            --source nuget-source/package/release --prerelease
        done
        dotnet clean
        dotnet build --configuration Release
